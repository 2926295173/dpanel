task:
  name: rclone-backup
  descriptionZh: |
    ‰ΩøÁî® rclone Â§á‰ªΩÂÆø‰∏ªÊú∫ÁöÑÊüê‰∏™ÁõÆÂΩïÂà∞‰∫ëÂ≠òÂÇ®
  descriptionEn: |
    Backup a directory from host to Cloud Storage using rclone
  script: |
    BACKUP_FILE_NAME=$(echo $BACKUP_SOURCE_PATH | tr "/" "_")_$(date +"%Y%m%d%H%M%S").tar.gz
    
    BACKUP_SOURCE_PATH_STR=$(echo $BACKUP_SOURCE_PATH | tr "/" "_")_

    echo "üì¶ ÂºÄÂßãÂéãÁº©ÁõÆÂΩïÊñá‰ª∂: ${BACKUP_SOURCE_PATH}"
  
    docker run -it --rm --name dpanel-host-backup-rclone \
    -v ${BACKUP_SOURCE_PATH}:/source \
    -e S3_ACCESS_KEY=${S3_ACCESS_KEY} \
    -e S3_SECRET_KEY=${S3_SECRET_KEY} \
    -e S3_PROVIDER=${S3_PROVIDER} \
    -e S3_ENDPOINT=${S3_ENDPOINT} \
    -e S3_REGION=${S3_REGION} \
    -e S3_BUCKET=${S3_BUCKET} \
    -e BACKUP_SOURCE_PATH_STR=${BACKUP_SOURCE_PATH_STR} \
    -e BACKUP_FILE_NAME=${BACKUP_FILE_NAME} \
    -e BACKUP_FILE_MAX_NUM=${BACKUP_FILE_MAX_NUM} \
    -e BACKUP_EXCLUDE_DIRS=${BACKUP_EXCLUDE_DIRS} \
    --entrypoint /bin/sh \
    rclone/rclone \
    -c "$(cat <<'EOF'
      echo "‚ÑπÔ∏è ÊéíÈô§ÁõÆÂΩï: ${BACKUP_EXCLUDE_DIRS}"
  
      # ÊûÑÂª∫ÊéíÈô§ÁõÆÂΩïÁöÑÂèÇÊï∞
      EXCLUDE_PARAMS=""
      for dir in $(echo ${BACKUP_EXCLUDE_DIRS} | tr ',' '\n'); do
        EXCLUDE_PARAMS="$EXCLUDE_PARAMS --exclude=$dir"
      done
  
      echo "‚ÑπÔ∏è ÂºÄÂßãÂéãÁº©ÁõÆÂΩïÊñá‰ª∂"
  
      tar czvf /tmp/${BACKUP_FILE_NAME} -C /source . $EXCLUDE_PARAMS
  
      echo "‚ÑπÔ∏è ÂºÄÂßã‰∏ä‰º†Êñá‰ª∂: ${BACKUP_FILE_NAME}"
  
      rclone copy /tmp/${BACKUP_FILE_NAME} :s3:${S3_BUCKET}/${S3_PREFIX} \
        --s3-provider ${S3_PROVIDER} \
        --s3-access-key-id=${S3_ACCESS_KEY} \
        --s3-secret-access-key=${S3_SECRET_KEY} \
        --s3-endpoint=${S3_ENDPOINT} \
        --s3-region=${S3_REGION} \
        -v
  
      echo "‚úÖ ‰∏ä‰º†ÊàêÂäüÔºö${S3_BUCKET}/${S3_PREFIX}/${BACKUP_FILE_NAME}"
  
      if [ ! -z ${BACKUP_FILE_MAX_NUM} ] && [ ${BACKUP_FILE_MAX_NUM} -gt 0 ]; then
        ALL_FILES=$(rclone lsf :s3:${S3_BUCKET}/${S3_PREFIX} \
                       --s3-provider ${S3_PROVIDER} \
                       --s3-access-key-id=${S3_ACCESS_KEY} \
                       --s3-secret-access-key=${S3_SECRET_KEY} \
                       --s3-endpoint=${S3_ENDPOINT} \
                       --s3-region=${S3_REGION} \
                       --files-only | grep ${BACKUP_SOURCE_PATH_STR} | sort)
  
        echo "$ALL_FILES"
  
        TOTAL_COUNT=$(echo "$ALL_FILES" | wc -l | tr -d ' ')
  
        echo "‚ÑπÔ∏è ÂºÄÂßãÊ£ÄÊü•Â§á‰ªΩÊñá‰ª∂ÊòØÂê¶Ë∂ÖÂá∫ÊúÄÂ§ßÊï∞ÈáèÔºåÂΩìÂâçÊï∞ÈáèÔºö${TOTAL_COUNT}ÔºåÊúÄÂ§ßÊï∞ÈáèÔºö${BACKUP_FILE_MAX_NUM}"
  
        DELETE_COUNT=$(expr $TOTAL_COUNT - $BACKUP_FILE_MAX_NUM)
  
        if [ "$DELETE_COUNT" -gt 0 ]; then
          echo "üóëÔ∏è ÈúÄË¶ÅÂà†Èô§ ${DELETE_COUNT} ‰∏™ÊóßÊñá‰ª∂..."
          echo "$ALL_FILES" | head -n $DELETE_COUNT | while read oldfile; do
            echo "üßπ Âà†Èô§ÊóßÊñá‰ª∂: :s3:${S3_BUCKET}/${S3_PREFIX}/$oldfile"
            rclone delete ":s3:${S3_BUCKET}/${S3_PREFIX}/$oldfile" \
              --s3-provider ${S3_PROVIDER} \
              --s3-access-key-id=${S3_ACCESS_KEY} \
              --s3-secret-access-key=${S3_SECRET_KEY} \
              --s3-endpoint=${S3_ENDPOINT} \
              --s3-region=${S3_REGION} \
              -v
          done
        else
          echo "‚ÑπÔ∏è ÂΩìÂâçÂ§á‰ªΩÊï∞ÈáèÊú™Ë∂ÖËøá ($BACKUP_FILE_MAX_NUM)ÔºåÊó†ÈúÄÂà†Èô§„ÄÇ"
        fi
      else
        echo "‚ÑπÔ∏è ÂΩìÂâçÊú™ËÆæÁΩÆÊúÄÂ§ßÂ§á‰ªΩÊï∞ÈáèÔºåÊó†ÈúÄÂà†Èô§„ÄÇ"
      fi
    EOF
    )"

  tag:
    - run-in-dpanel
    - rclone
    - s3
  environment:
    - name: BACKUP_SOURCE_PATH
      labelZh: ÈúÄË¶ÅÂ§á‰ªΩÁöÑ‰∏ªÊú∫ÁõÆÂΩï
      labelEn: Backup source path of host
    - name: BACKUP_EXCLUDE_DIRS
      labelZh: ÈúÄË¶ÅÂ§á‰ªΩÊéíÈô§ÁöÑÁõÆÂΩïÔºàÂèØ‰∏∫Á©∫Ôºâ
      labelEn: Excluded directories need to be backed up (optional)
    - name: BACKUP_FILE_MAX_NUM
      labelZh: ÊúÄÂ§ß‰øùÂ≠òÊñá‰ª∂Êï∞ÈáèÔºàÂèØ‰∏∫Á©∫Ôºâ
      labelEn: Maximum number of saved files (optional)
    - name: S3_PROVIDER
      labelZh: S3 Êèê‰æõÂïÜÔºà‰æãÂ¶Ç Alibaba / TencentCOS / Qiniu / MinioÔºâ
      labelEn: S3 provider (e.g., Alibaba / TencentCOS / Qiniu / Minio)
    - name: S3_ACCESS_KEY
      labelZh: S3 COS ÁöÑ SecretId
      labelEn: SecretId for S3 COS
    - name: S3_SECRET_KEY
      labelZh: S3 COS ÁöÑ SecretKey
      labelEn: SecretKey for S3 COS
    - name: S3_ENDPOINT
      labelZh: COS EndpointÔºà‰æãÂ¶ÇÔºöcos.ap-guangzhou.myqcloud.comÔºâ
      labelEn: COS Endpoint (e.g., cos.ap-guangzhou.myqcloud.com)
    - name: S3_REGION
      labelZh: COS Âå∫ÂüüÔºà‰æãÂ¶ÇÔºöap-nanjingÔºâ
      labelEn: COS region (e.g., ap-nanjing)
    - name: S3_BUCKET
      labelZh: COS Â≠òÂÇ®Ê°∂ÂêçÁß∞Ôºà‰æãÂ¶ÇÔºöbackupÔºâ
      labelEn: COS bucket name (e.g., backup)
    - name: S3_PREFIX
      labelZh: ‰∏ä‰º†Êñá‰ª∂‰øùÂ≠òÁöÑË∑ØÂæÑÂâçÁºÄÔºàÂèØ‰∏∫Á©∫Ôºâ
      labelEn: Path prefix in bucket for storing uploaded file (optional)
